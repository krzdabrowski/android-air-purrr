apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    flavorDimensions "default"
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.krzdabrowski.airpurrr"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 3
        versionName "1.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            buildConfigField 'String', "ApiKey", AirPurrr_ApiKey
            buildConfigField 'String', "TestLogin", Test_Login
            buildConfigField 'String', "TestPassword", Test_Password
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            resValue "string", "app_name", "AirPurrr dev"
            buildConfigField "String", "BASE_RPI_URL", "\"http://rpi.airpurrr.eu/\""
            buildConfigField "String", "BASE_MOSQUITTO_URL", "\"tcp://backend.airpurrr.eu:1883\""
            buildConfigField "String", "BASE_API_URL", "\"https://airapi.airly.eu/\""
        }
        mock {
            resValue "string", "app_name", "AirPurrr mock"
            buildConfigField "String", "BASE_RPI_URL", "\"https://gist.githubusercontent.com/krzdabrowski/93d590983cc05a5b9dc9e29cc3ed01d0/raw/4860998b5b01d1cafa35db2a139bc10108c0588a/\""
            buildConfigField "String", "BASE_MOSQUITTO_URL", "\"tcp://backend.airpurrr.eu:1883\""
            buildConfigField "String", "BASE_API_URL", "\"https://airapi.airly.eu/\""
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true  // for Robolectric
    }
}

dependencies {
    def androidDependencies = rootProject.ext.androidDependencies
    def googleDependencies = rootProject.ext.googleDependencies
    def thirdPartyDependencies = rootProject.ext.thirdPartyDependencies
    def testDependencies = rootProject.ext.testDependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // region Android
    implementation androidDependencies.kotlin
    implementation androidDependencies.coroutinesAndroid
    implementation androidDependencies.appCompat
    implementation androidDependencies.coreKtx
    implementation androidDependencies.fragmentKtx
    implementation androidDependencies.liveDataKtx
    implementation androidDependencies.preferenceKtx
    implementation androidDependencies.biometric
    implementation androidDependencies.viewPager2
    implementation androidDependencies.swipeRefreshLayout
    // endregion

    // region Google
    implementation googleDependencies.material
    implementation googleDependencies.location
    implementation googleDependencies.firebaseCore
    implementation googleDependencies.firebaseAuth
    kapt googleDependencies.dataBinding
    // endregion

    // region Third party
    implementation thirdPartyDependencies.retrofit
    implementation thirdPartyDependencies.moshi
    implementation thirdPartyDependencies.retrofitFlowCallAdapter
    implementation thirdPartyDependencies.timber
    implementation thirdPartyDependencies.koin
    implementation thirdPartyDependencies.koinViewmodel
    implementation thirdPartyDependencies.williamChart
    implementation thirdPartyDependencies.mqttClient
    implementation thirdPartyDependencies.mqttService
    // endregion

    // region AndroidTest
    androidTestImplementation testDependencies.coreKtx
    androidTestImplementation testDependencies.extJunitKtx
    androidTestImplementation testDependencies.espressoCore
    androidTestImplementation testDependencies.espressoIntents
    androidTestImplementation testDependencies.coroutinesTest
    androidTestImplementation testDependencies.testRunner
    androidTestImplementation testDependencies.androidMockk
    androidTestImplementation testDependencies.truth
    implementation testDependencies.espressoIdlingResource
    // endregion

    // region Test
    testImplementation testDependencies.coreKtx
    testImplementation testDependencies.coreTesting
    testImplementation testDependencies.extJunitKtx
    testImplementation testDependencies.coroutinesTest
    testImplementation testDependencies.junit
    testImplementation testDependencies.mockk
    testImplementation testDependencies.truth
    testImplementation testDependencies.koin
    testImplementation testDependencies.robolectric
    debugImplementation(testDependencies.fragment) {
        exclude group: 'androidx.test', module: 'core'
    }
    // endregion
}

apply plugin: 'com.google.gms.google-services'