ext {
    // region Android
    coroutines = '1.3.3'
    appCompat = '1.1.0'
    coreKtx = '1.1.0'
    fragmentKtx = '1.2.0'
    liveDataKtx = '2.2.0'
    preferenceKtx = '1.1.0'
    biometric = '1.0.1'
    viewPager = '1.0.0'
    swipeRefreshLayout = '1.0.0'
    // endregion

    // region Google
    material = '1.1.0-rc02'
    location = '17.0.0'
    firebaseCore = '17.2.1'
    firebaseAuth = '19.2.0'
    dataBinding = '3.1.4'
    // endregion

    // region Third party
    retrofit = '2.7.1'
    retrofitFlowCallAdapter = '0.2.0'
    timber = '4.7.1'
    koin = '2.0.1'
    leakCanary = '2.1'
    williamChart = '3.3.0'
    // endregion

    // region Test
    testCoreKtx = '1.2.0'
    testCoreTesting = '2.1.0'
    testExtJunitKtx = '1.1.1'
    testEspresso = '3.2.0'
    testMockk = '1.9.3'
    testRunner = '1.2.0'
    testJunit = '4.12'
    testTruth = '1.0'
    testRobolectric = '4.3.1'
    // endregion

    androidDependencies = [
        kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin",
        coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines",
        appCompat: "androidx.appcompat:appcompat:$appCompat",
        coreKtx: "androidx.core:core-ktx:$coreKtx",
        fragmentKtx: "androidx.fragment:fragment-ktx:$fragmentKtx",
        liveDataKtx: "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataKtx",
        preferenceKtx: "androidx.preference:preference-ktx:$preferenceKtx",
        biometric: "androidx.biometric:biometric:$biometric",
        viewPager2: "androidx.viewpager2:viewpager2:$viewPager",
        swipeRefreshLayout: "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLayout"
    ]

    googleDependencies = [
        material: "com.google.android.material:material:$material",
        location: "com.google.android.gms:play-services-location:$location",
        firebaseCore: "com.google.firebase:firebase-core:$firebaseCore",
        firebaseAuth: "com.google.firebase:firebase-auth:$firebaseAuth",
        dataBinding: "com.android.databinding:compiler:$dataBinding"
    ]

    thirdPartyDependencies = [
        retrofit: "com.squareup.retrofit2:retrofit:$retrofit",
        moshi: "com.squareup.retrofit2:converter-moshi:$retrofit",
        retrofitFlowCallAdapter: "com.github.MohammadSianaki:Retrofit2-Flow-Call-Adapter:$retrofitFlowCallAdapter",
        timber: "com.jakewharton.timber:timber:$timber",
        koin: "org.koin:koin-android:$koin",
        koinViewmodel: "org.koin:koin-androidx-viewmodel:$koin",
        leakCanary: "com.squareup.leakcanary:leakcanary-android:$leakCanary",
        williamChart: "com.diogobernardino:williamchart:$williamChart"
    ]

    testDependencies = [
        coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines",
        coreKtx: "androidx.test:core-ktx:$testCoreKtx",
        coreTesting: "androidx.arch.core:core-testing:$testCoreTesting",
        extJunitKtx: "androidx.test.ext:junit-ktx:$testExtJunitKtx",
        espressoCore: "androidx.test.espresso:espresso-core:$testEspresso",
        espressoIntents: "androidx.test.espresso:espresso-intents:$testEspresso",
        espressoIdlingResource: "androidx.test.espresso:espresso-idling-resource:$testEspresso",
        testRunner: "androidx.test:runner:$testRunner",
        junit: "junit:junit:$testJunit",
        mockk: "io.mockk:mockk:$testMockk",
        androidMockk: "io.mockk:mockk-android:$testMockk",
        truth: "com.google.truth:truth:$testTruth",
        koin: "org.koin:koin-test:$koin",
        robolectric: "org.robolectric:robolectric:$testRobolectric",
        fragment: "androidx.fragment:fragment-testing:$fragmentKtx"
    ]
}